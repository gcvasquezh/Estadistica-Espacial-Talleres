rm(list=ls())
library(spatstat)
?countourlines
?contourlines
x<-runif(0,1,n=100)
y<-runif(0,1,n=100)
m1<-rnorm(100,10,2)
P<-ppp(x, y, c(-0.1,1.1),c(-0.1,1.1), marks =m1)
plot(P, main="Patrón Marcado")
rm(list=ls())
library(spatstat)
install.packages("spatstat")
library(spatstat)
aleatorio<-rpoispp(100)
plot(aleatorio, main="Aleatorio", pch=20)
points(aleatorio, main="Aleatorio", pch=20, col=2)
summary(aleatorio)
plot(density(aleatorio), main="Estimación kernel de la intensidad")
contour(density(aleatorio), add=TRUE, main="Estimación kernel de la intensidad")
points(aleatorio, pch=20)
cx<-runif(600, 0,4)
cy<-runif(600,0,3)
patron<-ppp(cx,cy,c(0,4),c(0,3))
plot(patron, main="Aleatorio")
summary(patron)
plot(density(patron),main="Intensidad Constante = 50")
contour(density(patron),add=TRUE)
plot(patron, add=TRUE, col=2)
plot(density(patron, bw=.25), main="Intensidad Constante = 50")
contour(density(patron, bw=.25),add=TRUE)
w<-owin(c(1,3),c(1.5,2.5))
plot(patron, main="")
plot(patron[w], pch=19, main="", add=TRUE, col=2)
plot(w, add=TRUE)
lambda<-function(x,y)
{
1000*(x+y)
}
nohomo<-rpoispp(lambda)
plot(nohomo)
summary(nohomo)
plot(density(nohomo), main="Estimación kernel de la intensidad")
contour(density(nohomo), add=TRUE, main="Estimación kernel de la intensidad")
points(nohomo, pch=20)
lambda<-function(x,y)
{
1000*(x+y)
}
nohomo<-rpoispp(lambda)
plot(nohomo)
summary(nohomo)
plot(density(nohomo), main="Estimación kernel de la intensidad")
contour(density(nohomo), add=TRUE, main="Estimación kernel de la intensidad")
points(nohomo, pch=20)
rm(list=ls(all=TRUE)) # Remueve de la consola todo
# CARGA LIBRERÍAS ####
lista_librerías <- c("xlsx","tools","gtools","stringr","readr","haven","ggspatial",
"dplyr","tidyr","tidyverse","WriteXLS","spatialEco", "viridis",
"spdep","gstat","raster","sf","sp","readxl","pacman", "MASS",
"sfheaders","foreign", "spatialreg","ggplot2","spatstat")
no_installs <- lista_librerías[!lista_librerías %in% installed.packages()]
if(length(no_installs) > 0) {
cat("Los siguientes paquetes no están instalados :\n")
cat(no_installs, sep = "\n")
install.packages(no_installs)
} else {
cat("Todos los paquetes están instalados. \n")
}
sapply(lista_librerías, require, character = TRUE)
directorio<-setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
Base_col <- st_read(paste0(directorio,"/Mapa_Dep_politico/MGN_ADM_DPTO_POLITICO.shp"))
# PUNTO 4 ####
## CARGA BASES DE DATOS ####
directorio<-setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
Base_col <- st_read(paste0(directorio,"/Mapa_Dep_politico/MGN_ADM_DPTO_POLITICO.shp"))
Base_datos <- read_excel(paste0(directorio,"/sismicidad_historica.xls"),range="A8:P91")
Base_datos <- Base_datos[c(4,5,16)]
sep_mun <- with(Base_datos,str_split_fixed(`Area epicentral`,",",n=2))
Base_datos <- within(Base_datos,{
departamento <- str_to_title(str_squish(str_to_lower(sep_mun[,2])))
rm(`Area epicentral`)
})
Base_datos$departamento <- str_to_upper(Base_datos$departamento)
Base_final <- Base_col %>% left_join(Base_datos,by=c("dpto_cnmbr"="departamento"))
Base_final <- cbind(Base_final[10],Base_final[9],Base_final[c(1:8)])
Base_final <- Base_final[-c(12:13)]
colnames(Base_final)[1:2] <- c("Latitud","Longitud")
Base_final$Latitud <- as.numeric(Base_final$Latitud)
Base_final$Longitud <- as.numeric(Base_final$Longitud)
Base_final <- st_as_sf(Base_final, crs = 4326)
View(Base_final)
## ESTIMACIÓN KERNEL FUNCIÓN DE INTENSIDAD ####
bbox <- st_bbox(Base_final)
ventana <- owin(c(bbox["xmin"], bbox["xmax"]), c(bbox["ymin"], bbox["ymax"]))
puntos <- ppp(Base_final$Latitud, Base_final$Longitud, window = ventana)
densidad <- density(puntos)
densidad_raster <- raster::raster(densidad)
mask <- raster::rasterize(st_as_sf(Base_final), densidad_raster, field = 1)
densidad_raster <- raster::mask(densidad_raster, mask)
df_densidad <- as.data.frame(rasterToPoints(densidad_raster), xy = TRUE)
colnames(df_densidad) <- c("x", "y", "densidad")
contornos <- rasterToContour(densidad_raster)
df_contorno <- do.call(rbind, lapply(contornos@lines, function(lines_object) {
coords_list <- lapply(lines_object@Lines, function(line) {
coords <- as.data.frame(line@coords)
coords
})
coords_df <- do.call(rbind, coords_list)
level <- rep(lines_object@ID, nrow(coords_df))
data.frame(x = coords_df[,1], y = coords_df[,2], level = level)
}))
graf_contor <- kde2d(df_contorno$x, df_contorno$y, n = 100)
df_graf_contor <- expand.grid(x = graf_contor$x, y = graf_contor$y)
df_graf_contor$z <- as.vector(graf_contor$z)
ggplot() +
geom_sf(data = Base_final, fill = NA, color = "black") +
geom_raster(data = df_densidad, aes(x = x, y = y, fill = densidad), alpha = 0.6) +
geom_contour(data = df_graf_contor, aes(x = x, y = y, z = z), color = "black") +
geom_point(data = Base_final, aes(x = Latitud, y = Longitud), color = "blue", size = 2) +
coord_sf() +
labs(title = "Estimación Kernel de la función de intensidad", fill = "Densidad",
x = "",  y = "",) +
scale_fill_viridis_c(option = "plasma", begin = 0, end = 1, name = "Densidad") +
theme_minimal()
## FUNCIÓN G ####
G1<-Gest(puntos)
plot(G1)
## FUNCIÓN G ####
G1<-Gest(puntos)
plot(G1, main="Función G - Presencia de Sismos en Colombia")
plot(envelope(puntos, Gest), main=" Función G con bandas de confianza")
## FUNCIÓN F ####
F1<-Fest(puntos)
plot(F1, main="Función F - Presencia de Sismos en Colombia")
plot(envelope(puntos, Fest), main=" Función F con bandas de confianza")
## FUNCIÓN k ####
K1<-Kest(puntos)
plot(K1, main="Función K - Presencia de Sismos en Colombia")
plot(envelope(puntos, Kest), main=" Función K con bandas de confianza")
## Test de aleatoriedad basado en cuadrantes ####
Q<-quadratcount(puntos, nx=6,ny=3)
plot(puntos)
plot(Q, add=TRUE)
M<-quadrat.test(puntos, nx=3, ny=3)
plot(puntos)
plot(M, add=TRUE)
M
G1<-Gest(puntos)
plot(G1, main="Función G - Presencia de Sismos en Colombia")
plot(envelope(puntos, Gest), main=" Función G con bandas de confianza - Presencia de Sismos en Colombia")
## FUNCIÓN F ####
F1<-Fest(puntos)
plot(F1, main="Función F - Presencia de Sismos en Colombia")
plot(envelope(puntos, Fest), main=" Función F con bandas de confianza - Presencia de Sismos en Colombia")
## FUNCIÓN k ####
K1<-Kest(puntos)
plot(K1, main="Función K - Presencia de Sismos en Colombia")
plot(envelope(puntos, Kest), main=" Función K con bandas de confianza - Presencia de Sismos en Colombia")
## Test de aleatoriedad basado en cuadrantes ####
Q<-quadratcount(puntos, nx=6,ny=3)
plot(Q, add=TRUE)
Q<-quadratcount(puntos, nx=6,ny=3)
plot(Q)
Q<-quadratcount(puntos, nx=6,ny=3)
plot(Q, main = "Conteo de puntos por cuadrantes")
M<-quadrat.test(puntos, nx=3, ny=3)
plot(M, main = "Test de Aleatoriedad por cuadrantes")
M
