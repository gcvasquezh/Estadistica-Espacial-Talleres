sample(ruleta, size = 1, replace = TRUE)
sample(ruleta, size = 1, replace = TRUE)
sample(ruleta, size = 1, replace = TRUE)
sample(ruleta, size = 1, replace = TRUE)
sample(ruleta, size = 1, replace = TRUE)
sample(ruleta, size = 1, replace = TRUE)
sample(ruleta, size = 1, replace = TRUE)
sample(ruleta, size = 1, replace = TRUE)
sample(ruleta, size = 1, replace = TRUE)
sample(ruleta, size = 1, replace = TRUE)
sample(ruleta, size = 1, replace = TRUE)
ruleta<-c("Argentina","Brasil","Uruguay","Ecuador","Colombia","Alemania",
"Italia","España","Francia","Inglaterra","Resto del mundo")
sample(ruleta, size = 1, replace = TRUE)
sample(ruleta, size = 1, replace = TRUE)
sample(ruleta, size = 1, replace = TRUE)
sample(ruleta, size = 1, replace = TRUE)
sample(ruleta, size = 1, replace = TRUE)
sample(ruleta, size = 1, replace = TRUE)
sample(ruleta, size = 1, replace = TRUE)
sample(ruleta, size = 1, replace = TRUE)
sample(ruleta, size = 1, replace = TRUE)
sample(ruleta, size = 1, replace = TRUE)
sample(ruleta, size = 1, replace = TRUE)
sample(ruleta, size = 1, replace = TRUE)
sample(ruleta, size = 1, replace = TRUE)
sample(ruleta, size = 1, replace = TRUE)
sample(ruleta, size = 1, replace = TRUE)
sample(ruleta, size = 1, replace = TRUE)
sample(ruleta, size = 1, replace = TRUE)
sample(ruleta, size = 1, replace = TRUE)
sample(ruleta, size = 1, replace = TRUE)
sample(ruleta, size = 1, replace = TRUE)
sample(ruleta, size = 1, replace = TRUE)
sample(ruleta, size = 1, replace = TRUE)
sample(ruleta, size = 1, replace = TRUE)
sample(ruleta, size = 1, replace = TRUE)
sample(ruleta, size = 1, replace = TRUE)
sample(ruleta, size = 1, replace = TRUE)
sample(ruleta, size = 1, replace = TRUE)
sample(ruleta, size = 1, replace = TRUE)
sample(ruleta, size = 1, replace = TRUE)
sample(ruleta, size = 1, replace = TRUE)
sample(ruleta, size = 1, replace = TRUE)
sample(ruleta, size = 1, replace = TRUE)
sample(ruleta, size = 1, replace = TRUE)
sample(ruleta, size = 1, replace = TRUE)
sample(ruleta, size = 1, replace = TRUE)
ruleta<-c("Argentina","Brasil","Uruguay","Ecuador","Colombia","Alemania",
"Italia","España","Francia","Inglaterra","Resto del mundo")
sample(ruleta, size = 1, replace = TRUE)
sample(ruleta, size = 1, replace = TRUE)
sample(ruleta, size = 1, replace = TRUE)
sample(ruleta, size = 1, replace = TRUE)
ruleta<-c("Argentina","Brasil","Uruguay",
"Ecuador","Colombia","Alemania",
"Portugal","España","Francia",
"Inglaterra","Resto del mundo")
sample(ruleta, size = 1, replace = TRUE)
sample(ruleta, size = 1, replace = TRUE)
sample(ruleta, size = 1, replace = TRUE)
sample(ruleta, size = 1, replace = TRUE)
ruleta<-c("Argentina","Brasil","Uruguay",
"Ecuador","Colombia","Alemania",
"Portugal","España","Francia",
"Inglaterra","Resto del mundo")
sample(ruleta, size = 1, replace = TRUE)
sample(ruleta, size = 1, replace = TRUE)
sample(ruleta, size = 1, replace = TRUE)
sample(ruleta, size = 1, replace = TRUE)
sample(ruleta, size = 1, replace = TRUE)
sample(ruleta, size = 1, replace = TRUE)
sample(ruleta, size = 1, replace = TRUE)
sample(ruleta, size = 1, replace = TRUE)
sample(ruleta, size = 1, replace = TRUE)
sample(ruleta, size = 1, replace = TRUE)
sample(ruleta, size = 1, replace = TRUE)
sample(ruleta, size = 1, replace = TRUE)
sample(ruleta, size = 1, replace = TRUE)
sample(ruleta, size = 1, replace = TRUE)
sample(ruleta, size = 1, replace = TRUE)
sample(ruleta, size = 1, replace = TRUE)
sample(ruleta, size = 1, replace = TRUE)
sample(ruleta, size = 1, replace = TRUE)
sample(ruleta, size = 1, replace = TRUE)
sample(ruleta, size = 1, replace = TRUE)
sample(ruleta, size = 1, replace = TRUE)
sample(ruleta, size = 1, replace = TRUE)
sample(ruleta, size = 1, replace = TRUE)
sample(ruleta, size = 1, replace = TRUE)
sample(ruleta, size = 1, replace = TRUE)
sample(ruleta, size = 1, replace = TRUE)
sample(ruleta, size = 1, replace = TRUE)
sample(ruleta, size = 1, replace = TRUE)
sample(ruleta, size = 1, replace = TRUE)
sample(ruleta, size = 1, replace = TRUE)
sample(ruleta, size = 1, replace = TRUE)
sample(ruleta, size = 1, replace = TRUE)
sample(ruleta, size = 1, replace = TRUE)
sample(ruleta, size = 1, replace = TRUE)
sample(ruleta, size = 1, replace = TRUE)
sample(ruleta, size = 1, replace = TRUE)
sample(ruleta, size = 1, replace = TRUE)
sample(ruleta, size = 1, replace = TRUE)
sample(ruleta, size = 1, replace = TRUE)
sample(ruleta, size = 1, replace = TRUE)
sample(ruleta, size = 1, replace = TRUE)
ruleta<-c("Argentina","Brasil","Uruguay",
"Chile","Colombia","Alemania",
"Portugal","España","Francia",
"Inglaterra","Resto del mundo")
cruces<-c("Lozano","Duitama","Anderson","Germán")
cruces <- sample(cruces)
cat("Emparejamientos de semifinales:\n")
for (i in seq(1, length(cruces), by = 2)) {
cat(cruces[i], "vs", cruces[i + 1], "\n")
}
cruces <- sample(cruces)
cat("Emparejamientos de semifinales:\n")
for (i in seq(1, length(cruces), by = 2)) {
cat(cruces[i], "vs", cruces[i + 1], "\n")
}
cruces <- sample(cruces)
cat("Emparejamientos de semifinales:\n")
for (i in seq(1, length(cruces), by = 2)) {
cat(cruces[i], "vs", cruces[i + 1], "\n")
}
?ifelse
cruces<-c("Lozano","Duitama","Anderson","Germán")
cruces <- sample(cruces)
cat("Emparejamientos de semifinales:\n")
for (i in seq(1, length(cruces), by = 2)) {
cat("Llave ", (i+1)/2,":",cruces[i], "vs", cruces[i + 1], "\n")
}
cruces <- sample(cruces)
cat("Emparejamientos de semifinales:\n")
for (i in seq(1, length(cruces), by = 2)) {
cat("Llave ", (i+1)/2,":",cruces[i], "vs", cruces[i + 1], "\n")
}
cruces<-c("Lozano","Duitama","Anderson","Germán",
"Julieta","Fofi","Ander","Cata",
"Karol","Juan Pablo","Lilis","Ana",
"Danna","Steven","John","Camilo")
cruces <- sample(cruces)
cat("Emparejamientos de semifinales:\n")
for (i in seq(1, length(cruces), by = 2)) {
cat("Llave ", (i+1)/2,":",cruces[i], "vs", cruces[i + 1], "\n")
}
primer_anho<-function(anho){
if(anho>0){
res<-(i*100)-99
}else{
res<-"Ingrese un número positivo (año)"
}
return(res)
}
primer_anho(20)
primer_anho<-function(anho){
if(anho>0){
res<-(anho*100)-99
}else{
res<-"Ingrese un número positivo (año)"
}
return(res)
}
primer_anho(20)
primer_anho(-2)
primer_anho(e)
primer_anho<-function(siglo){
if(siglo>0){
res<-(siglo*100)-99
}else{
res<-"Ingrese un número positivo (año)"
}
return(res)
}
siglo<-function(anho){
if(anho>0){
res<-anho%/%100
if(año%%100 != 0){
res<-res+1
}
}else{
res<-"Ingrese un número positivo (año)"
}
return(res)
}
siglo(1988)
siglo<-function(anho){
if(anho>0){
res<-anho%/%100
if(año%%100 != 0){
res<-res+1
}
}else{
res<-"Ingrese un número positivo (año)"
}
return(res)
}
siglo(1988)
siglo<-function(anho){
if(anho>0){
res<-anho%/%100
if(anho%%100 != 0){
res<-res+1
}
}else{
res<-"Ingrese un número positivo (año)"
}
return(res)
}
siglo(1988)
siglo(1999)
siglo(2000)
siglo(2001)
siglo(1901)
siglo(1900)
1988/100
1901/100
1900/100
siglo(-3)
primer_anho(-3)
primer_anho<-function(siglo){
if(siglo>0){
res<-(siglo*100)-99
}else{
res<-"Ingrese un número positivo (siglo)"
}
return(res)
}
primer_anho(-3)
siglo(1900)
primer_anho(3)
programa<-function(anho){
ssiglo<-siglo(anho)
pri_anho<-primer_anho(ssiglo)
return(c(ssiglo,pri_anho))
}
programa(1988)
programa(1988)[1]
programa(1988)[2]
cat("El año ", anho, " era del siglo ", programa(anho)[1],
" y el primer año de ese siglo fue ",programa(anho)[2])
anho<-1988
cat("El año ", anho, " era del siglo ", programa(anho)[1],
" y el primer año de ese siglo fue ",programa(anho)[2])
cat("Por favor a continuación escriba un año (positivo)
del cual usted desea saber a que siglo pertenece y
el primer año de ese siglo.")
anho<-1988
cat("El año ", anho, " era del siglo ", programa(anho)[1],
" y el primer año de ese siglo fue ",programa(anho)[2])
# PUNTO 3 ####
## Programa conversion medidas de longitud ####
conversion<-function(metros){
pies<-3.28084*metros
pulgadas<- 39.3701*metros
ctms<-100*metros
return(c(pies,pulgadas,ctms))
}
cat("Ingrese la medida (en metros) del objeto
del cual desea saber sus medidas.")
medida<-25
cat("El objeto mide ", medida," metros,",conversion(medida)[1],
" pies", conversion(medida)[2], " pulgadas y ", conversion(medida)[3],
" centímetros.")
cat("El objeto mide ", medida,"metros,",conversion(medida)[1],
"pies", conversion(medida)[2], "pulgadas y ", conversion(medida)[3],
"centímetros.")
cat("El objeto mide ", medida,"metros,",conversion(medida)[1],
"pies,", conversion(medida)[2], "pulgadas y ", conversion(medida)[3],
"centímetros.")
# PUNTO 2 ####
conversionAlas8AM<-function(cop){
num_usd<-pesos/3884.95
return(num_usd)
}
conversionAlMediodia<-function(cop){
num_usd<-conversionAlas8AM-(conversionAlas8AM*0.1)
return(num_usd)
}
# PUNTO 2 ####
conversionAlas8AM<-function(cop){
num_usd<-pesos/3884.95
return(num_usd)
}
conversionAlMediodia<-function(cop){
num_usd<-conversionAlas8AM-(conversionAlas8AM*0.1)
return(num_usd)
}
cat("Ingrese la cantidad de pesos colombianos los cuales desea saber
sus valores en dólares a las 8AM y al Mediodía.")
cop<-1360000
cat(cop,"COP son ",conversionAlas8AM(cop), "USD a las 8:00 AM y",
conversionAlMediodia(cop), "USD al medio día.")
# PUNTO 2 ####
conversionAlas8AM<-function(cop){
num_usd<-cop/3884.95
return(num_usd)
}
conversionAlMediodia<-function(cop){
num_usd<-conversionAlas8AM-(conversionAlas8AM*0.1)
return(num_usd)
}
cat("Ingrese la cantidad de pesos colombianos los cuales desea saber
sus valores en dólares a las 8AM y al Mediodía.")
cop<-1360000
cat(cop,"COP son ",conversionAlas8AM(cop), "USD a las 8:00 AM y",
conversionAlMediodia(cop), "USD al medio día.")
# PUNTO 2 ####
conversionAlas8AM<-function(cop){
num_usd<-cop/3884.95
return(num_usd)
}
conversionAlMediodia<-function(cop){
num_usd<-conversionAlas8AM(cop)-(conversionAlas8AM(cop)*0.1)
return(num_usd)
}
cat("Ingrese la cantidad de pesos colombianos los cuales desea saber
sus valores en dólares a las 8AM y al Mediodía.")
cop<-1360000
cat(cop,"COP son ",conversionAlas8AM(cop), "USD a las 8:00 AM y",
conversionAlMediodia(cop), "USD al medio día.")
library(geoR)
library (gstat)
library(MASS)
daticos<-c(12,15,10,14,12,14,13)
grid<-expand.grid(seq(0,2),seq(0,2))
plot(grid)
distancia<-dist(grid)
distancia<-as.matrix(distancia)
sigma<-var(daticos)
covarianza<-sigma-2.81*(1-exp(-distancia/2))
covarianza<-as.matrix(covarianza)
matplot(distancia,covarianza)
medias.cte<-rep(mean(daticos),9)
normal.cte<-mvrnorm(1,medias.cte,covarianza)
datoscte<-cbind(grid[,1],grid[,2],normal.cte)
x<-c(0,2,2,0,0)
y<-c(0,0,2,2,0)
datoscte.borde<-cbind(x,y)
datoscte.grid<-expand.grid(Este=seq(0,2), Norte=seq(0,2))
plot(datoscte.grid)
# Fondo - Salinidad ####
vario_fsali<-variog(coords=Fondo[,c("X","Y")],data=Fondo$Sali,uvec=seq(0,1000,length=50),estimator.type="class")
# Cargar datos
Fondo <- read_excel("https://github.com/gcvasquezh/Estadistica-Espacial-Talleres/raw/main/Fondo.xlsx")
library(readxl)
# Cargar datos
Fondo <- read_excel("https://github.com/gcvasquezh/Estadistica-Espacial-Talleres/raw/main/Fondo.xlsx")
# Cargar datos
Fondo <- read_excel("C:/Users/gcvh2/Documents/UNAL/8. 2024 -1S/Estadística Espacial/Estadistica-Espacial-Talleres/Fondo.xlsx")
# Cargar datos
Fondo <- read_excel("C:/Users/gcvh2/Documents/UNAL/8. 2024 -1S/Estadística Espacial/Estadistica-Espacial-Talleres/Taller 13 de Marzo/Fondo.xlsx")
View(Fondo)
coordenadas<-cbind(c(1,2,1,3,1,2,3),c(1,2,2,2,3,3,3),c(12,14,15,14,10,12,13))
View(coordenadas)
colnames(coordenadas)<-c("X","Y","Datos")
View(coordenadas)
vario_fsali<-variog(coords=coordenadas[,c("X","Y")],data=coordenadas$Datos,uvec=seq(0,1000,length=50),estimator.type="class")
vario_fsali<-variog(coords=coordenadas[,c("X","Y")],data=coordenadas[3],uvec=seq(0,1000,length=50),estimator.type="class")
vario_fsali<-variog(coords=coordenadas[,c("X","Y")],data=coordenadas[,3],uvec=seq(0,1000,length=50),estimator.type="class")
plot(vario_fsali)
vario_toy<-variog(coords=coordenadas[,c("X","Y")],data=coordenadas[,3],uvec=seq(0,1000,length=50),estimator.type="class")
plot(vario_toy)
lineal<-variofit(vario_toy,ini=c(sigmasq=1000,phi=100),fix.nugget=FALSE,cov.model="linear")
pepita<-lineal$nugget
meseta<-lineal$nugget+summary(lineal)$estimated.pars[2]
rango<-summary(lineal)$estimated.pars[3]
vario_toy<-variog(coords=coordenadas[,c("X","Y")],data=coordenadas[,3],estimator.type="class")
plot(vario_toy)
lineal<-variofit(vario_toy,ini=c(sigmasq=1000,phi=100),fix.nugget=FALSE,cov.model="linear")
pepita<-lineal$nugget
meseta<-lineal$nugget+summary(lineal)$estimated.pars[2]
meseta<-lineal$nugget+summary(lineal)$estimated.pars[2]
rango<-summary(lineal)$estimated.pars[3]
datoscte.kc<-krige.conv(datoscte, loc=datoscte.grid, bord=datoscte.borde, krige= krige.control(nugget=pepita,cov.pars=c(sigmasq=meseta, phi= rango)))
?krige.conv
vario_toy<-variog(coords=coordenadas[,c("X","Y")],data=coordenadas[,3],estimator.type="class")
plot(vario_toy)
lineal<-variofit(vario_toy,ini=c(sigmasq=var(daticos),phi=100),fix.nugget=FALSE,cov.model="linear")
pepita<-lineal$nugget
meseta<-lineal$nugget+summary(lineal)$estimated.pars[2]
rango<-summary(lineal)$estimated.pars[3]
datoscte.kc<-krige.conv(datoscte, loc=datoscte.grid, bord=datoscte.borde, krige= krige.control(nugget=pepita,cov.pars=c(sigmasq=meseta, phi= rango)))
lineal<-variofit(vario_toy,ini=c(sigmasq=var(daticos),phi=1),fix.nugget=FALSE,cov.model="linear")
pepita<-lineal$nugget
meseta<-lineal$nugget+summary(lineal)$estimated.pars[2]
rango<-summary(lineal)$estimated.pars[3]
datoscte.kc<-krige.conv(datoscte, loc=datoscte.grid, bord=datoscte.borde, krige= krige.control(nugget=pepita,cov.pars=c(sigmasq=meseta, phi= rango)))
datoscte.kc<-krige.conv(datoscte, coords=datoscte.grid, bord=datoscte.borde, krige= krige.control(nugget=pepita,cov.pars=c(sigmasq=meseta, phi= rango)))
datoscte.kc<-krige.conv(datoscte, locations=datoscte.grid, bord=datoscte.borde, krige= krige.control(nugget=pepita,cov.pars=c(sigmasq=meseta, phi= rango)))
datoscte.kc<-krige.conv(datoscte,coords = coordenadas[,c(1,2)] ,locations=datoscte.grid, bord=datoscte.borde, krige= krige.control(nugget=pepita,cov.pars=c(sigmasq=meseta, phi= rango)))
x<-c(0,2,2,0,0)
y<-c(0,0,2,2,0)
datoscte.borde<-cbind(x,y)
datoscte.grid<-expand.grid(Este=seq(0,2,l=50), Norte=seq(0,2,l=50))
plot(datoscte.grid)
vario_toy<-variog(coords=coordenadas[,c("X","Y")],data=coordenadas[,3],estimator.type="class")
plot(vario_toy)
lineal<-variofit(vario_toy,ini=c(sigmasq=var(daticos),phi=1),fix.nugget=FALSE,cov.model="linear")
pepita<-lineal$nugget
meseta<-lineal$nugget+summary(lineal)$estimated.pars[2]
rango<-summary(lineal)$estimated.pars[3]
datoscte.kc<-krige.conv(datoscte,locations=datoscte.grid, bord=datoscte.borde, krige= krige.control(nugget=pepita,cov.pars=c(sigmasq=meseta, phi= rango)))
datoscte
datoscte.grid
datoscte.borde
datoscte.kc<-krige.conv(datoscte,locations=datoscte.grid, bord=datoscte.borde, krige= krige.control(nugget=pepita,cov.pars=c(sigmasq=meseta, phi= rango)))
coord<-cbind(c(1,1,1,2,2,2,3,3,3),c(1,2,3,1,2,3,1,2,3),c(12,15,10,14,NA,12,NA,14,13))
coord<-cbind(c(1,1,1,2,2,2,3,3,3),c(1,2,3,1,2,3,1,2,3),c(12,15,10,14,NA,12,NA,14,13))
datoscte.kc<-krige.conv(datoscte,coords=coord[,c(1,2)],
data = coord[,3] ,locations=datoscte.grid,
bord=datoscte.borde, krige= krige.control(nugget=pepita,
cov.pars=c(sigmasq=meseta, phi= rango)))
View(datoscte)
datoscte.kc<-krige.conv(datoscte,coords=datoscte[,c(1,2)],
data = datoscte[,3] ,locations=datoscte.grid,
bord=datoscte.borde, krige= krige.control(nugget=pepita,
cov.pars=c(sigmasq=meseta, phi= rango)))
library (ade4)
library(readr)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
temp <- read.csv("temperatura.csv", sep=",", header=T)
read.csv("temperatura.csv", sep=",", header=T)
temp <- read.csv("C:/Users/gcvh2/Documents/UNAL/8. 2024 -1S/Estadística Espacial/Estadistica-Espacial-Talleres/Tarea Mantel/temperatura.csv", sep=",", header=T)
temp <- read.csv("C:\\Users\\gcvh2\\Documents\\UNAL\\8. 2024 -1S\\Estadística Espacial\\Estadistica-Espacial-Talleres\\Tarea Mantel\\temperatura.csv", sep=",", header=T)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
temp <- read.csv("temperatura.csv", sep=",", header=T)
temp
View(temp)
temp<-temp[,c(3,4,18)]
View(temp)
sapply(temp, is.na, 2)
apply(temp,2,sum(is.na(x)))
temp<-read.csv("temperatura.csv", sep=",", header=T)
temp<-temp[,c(3,4,18)]
apply(temp,2,sum(is.na(x)))
apply(temp,2,sum(is.na(temp)))
missings <- function(x) return(sum(is.na(x)))
apply(temp,2,sum(missings)
apply(temp,2,sum(missings))
apply(temp,2,sum(missings))
apply(temp,2,missings)
# Mantel test
?mantel.rtest
coord_dists <- dist(cbind(temp$Longitud, temp$Latitud))
valor_dists <- dist(temp$Valor)
res<-mantel.rtest(coord_dists, valor_dists, nrepet = 9999)
res
coord_dists <- dist(cbind(temp$Longitud, temp$Latitud))
valor_dists <- dist(temp$Valor)
coord_dists
View(temp)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
library (ade4)
library(readr)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
temp<-read.csv("temperatura.csv", sep=",", header=T)
temp<-temp[,c(3,4,18)]
missings <- function(x) return(sum(is.na(x)))
apply(temp,2,missings)
# Mantel test
?mantel.rtest
coord_dists <- dist(cbind(temp$Longitud, temp$Latitud))
valor_dists <- dist(temp$Valor)
res<-mantel.rtest(coord_dists, valor_dists, nrepet = 9999)
library (ade4)
library(readr)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
temp<-read.csv("temperatura.csv", sep=",", header=T)
temp<-temp[,c(3,4,18)]
missings <- function(x) return(sum(is.na(x)))
apply(temp,2,missings)
# Mantel test
?mantel.rtest
coord_dists <- dist(cbind(temp$Longitud, temp$Latitud))
valor_dists <- dist(temp$Valor)
coord_dists <- dist(cbind(temp$Longitud, temp$Latitud))
valor_dists <- dist(temp$Valor)
tictoc::tic()
res<-mantel.rtest(coord_dists, valor_dists, nrepet = 1000)
coord_dists <- dist(cbind(temp$Longitud, temp$Latitud))
valor_dists <- dist(temp$Valor)
tictoc::tic()
res<-mantel.rtest(coord_dists, valor_dists, nrepet = 1000)
tictoc::toc()
res
plot(res, xlab="M", main="Montecarlo distribution")
tictoc::tic()
res2<-mantel.rtest(coord_dists, alter=two-sided, valor_dists, nrepet = 1000)
library (ade4)
library(readr)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
temp<-read.csv("temperatura.csv", sep=",", header=T)
temp<-temp[,c(3,4,18)]
missings <- function(x) return(sum(is.na(x)))
apply(temp,2,missings)
# Mantel test
?mantel.rtest
coord_dists <- dist(cbind(temp$Longitud, temp$Latitud))
valor_dists <- dist(temp$Valor)
tictoc::tic()
res<-mantel.rtest(coord_dists, valor_dists, nrepet = 1000)
tictoc::toc()
res
plot(res, xlab="M", main="Montecarlo distribution")
